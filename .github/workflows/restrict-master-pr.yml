name: Restrict PRs to Master

on:
  pull_request:
    types: [opened, reopened]
    branches: [master]

permissions:
  pull-requests: write
  contents: read

jobs:
  check_pr_creator:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR creator's permissions
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const creator = context.payload.pull_request.user.login;
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            
            console.log(`PR created by: ${creator}`);
            console.log(`Repository: ${owner}/${repo}`);
            
            try {
              // Check if owner is an organization
              console.log('Checking if owner is an organization...');
              let isOrg = false;
              try {
                await github.rest.orgs.get({ org: owner });
                isOrg = true;
                console.log(`${owner} is an organization.`);
              } catch (error) {
                if (error.status === 404) {
                  console.log(`${owner} is not an organization, assuming it's a user.`);
                } else {
                  throw error;
                }
              }
              
              // Get collaborators or org members with push access
              let usersWithPushAccess = [];
              if (isOrg) {
                console.log('Fetching organization members...');
                const { data: members } = await github.rest.orgs.listMembers({ org: owner });
                usersWithPushAccess = members.map(m => m.login);
              } else {
                console.log('Fetching repository collaborators...');
                const { data: collaborators } = await github.rest.repos.listCollaborators({
                  owner: owner,
                  repo: repo,
                  permission: 'push'
                });
                usersWithPushAccess = collaborators.map(c => c.login);
              }
              
              console.log('Users with push access:');
              usersWithPushAccess.forEach(u => console.log(` - ${u}`));
              
              const canPush = usersWithPushAccess.includes(creator);
              console.log(`Can creator push? ${canPush}`);
              
              if (canPush) {
                console.log('Creator does not have push access. Closing PR...');
                await github.rest.issues.createComment({
                  owner: owner,
                  repo: repo,
                  issue_number: context.issue.number,
                  body: 'Please use the develop branch as base! This PR will be closed, as the master is only used for releases.'
                });
                
                await github.rest.pulls.update({
                  owner: owner,
                  repo: repo,
                  pull_number: context.issue.number,
                  state: 'closed'
                });
                console.log('PR closed and comment added.');
              } else {
                console.log('Creator has push access. No action taken.');
              }
            } catch (error) {
              console.error('Error occurred:');
              console.error(error);
            }
